// read all todos
try to genrate dynamic routes based on a query param. It seems that the nuxt SSR configuration is not generating duplicated pages for / and /locale=pt-BR, what should definetly happen
create some sort of object that tells wich apis should be instantaneously called when loading the page depending on what page I'm fisrt accessing
and call all the other apis without await just to retrieve and store the data. (for example, if calling /music as first route, call recommendations and quotes endpoints
but don't await for the response)
    - create a use-init composable;
        - create setRecommendations and getRecommendations
            const getRecomendations = async (locale: LanguageOptions) => {
                return useFetch<RecommendationModel[]>(localeRoute('/api/recommendations', locale)).then(
                    (res) => res.data
                );
            };
try to set generic type of useFetch using transform

automate the process of blocking a ip that is making too much requests
setup colormode (https://color-mode.nuxtjs.org/)
study stripe background or nuxt braground that moves with the mouse


|
|
|
|
|
|
|
Add all of this information on a onenote about the project:

NUXT:::::::::::::
- the cache on initial data is only happening because I'm using the initializer that doenst' run again when accessing home again.

APPWRITE:::::::::
- Payment link setup

- limit clients to 1 subscription (redirect to Stripe client portal)

- Api Keys
-- copy staging to production but basically all database permissions, read and write auth and storage.read
- Database
-- types
---- there's no array type so you select the type you wwant and them select if you want this to be an array.
---- if you create an array there's no functionalitty on enabling required because the default is always an empty array: https://discord.com/channels/564160730845151244/1090006380301275187

-- indexes
---- users:
------ index_email: to find if user already exists before creating again
---- allowed-emails:
------ index_email: to check if user is on allowed-emails on both login and signup
---- demos:
------ index_number: to query all documents on the list of the user available demos


- if for some reason I disable the demo, I need to remove the upvotes from the this demo