// read all todos

try to set generic type of useFetch using transform
try to not get await session.current session all the time
normalize names and convert everyplace that calls 'song' to 'demo'



test everything related to the user creation

|
|
|
|
|
|
|
Add all of this information on a onenote about the project:

NUXT:::::::::::::
- the cache on initial data is only happening because I'm using the initializer that doenst' run again when accessing home again.

APPWRITE:::::::::
- Payment link setup

- limit clients to 1 subscription (redirect to Stripe client portal)

- Api Keys
-- copy staging to production but basically all database permissions, read and write auth and storage.read
- Database
-- types
---- there's no array type so you select the type you wwant and them select if you want this to be an array.
---- if you create an array there's no functionalitty on enabling required because the default is always an empty array: https://discord.com/channels/564160730845151244/1090006380301275187

-- indexes
---- users:
------ index_email: to find if user already exists before creating again
---- allowed-emails:
------ index_email: to check if user is on allowed-emails on both login and signup
---- demos:
------ index_number: to query all documents on the list of the user available songs


- if for some reason I disable the song, I need to remove the upvotes from the this song 